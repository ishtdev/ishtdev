{
    "openapi": "3.0.0",
    "info": {
        "title": "Your API Title",
        "description": "Your API description",
        "version": "1.0.0"
    },
    "paths": {
        "/api/sendOtp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Otp",
                "operationId": "7077bce104bc01ef462f23809cc725dc",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "mobile_number"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "User name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "mobile_number": {
                                        "description": "User's mobile number",
                                        "type": "numeric",
                                        "format": "number",
                                        "example": "9879546328"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP Sent Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "username": {
                                            "description": "User name",
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "mobile_number": {
                                            "description": "User's mobile number",
                                            "type": "numeric",
                                            "format": "number",
                                            "example": "9879546328"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/otpVerification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Otp",
                "description": "PS-4 Level: Verify OTP for user authentication",
                "operationId": "cb8bca2c77a8bf14f2e7a378c222c488",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "verification_code"
                                ],
                                "properties": {
                                    "verification_code": {
                                        "description": "Enter Otp",
                                        "type": "integer",
                                        "format": "number",
                                        "example": "2341"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "verification_code": {
                                            "description": "Enter Otp",
                                            "type": "integer",
                                            "format": "number",
                                            "example": "2341"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid otp"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout User",
                "description": "Logs out the user by invalidating the JWT token.",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is already logged out or token not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to expire token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to expire token."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred during logout."
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/profiles": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update Profile",
                "description": "PS-4 Level: Update user profile details",
                "operationId": "1f1e0bf974d99762284dc1b83548bc88",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id",
                                    "full_name",
                                    "email",
                                    "dob",
                                    "religion",
                                    "varna",
                                    "gotra",
                                    "ishtdev",
                                    "kul_devta_devi",
                                    "bio",
                                    "poojatype_online",
                                    "poojatype_offline",
                                    "speciality_pooja",
                                    "pravara",
                                    "ved",
                                    "upved",
                                    "charanas",
                                    "mukha",
                                    "become_pandit",
                                    "street",
                                    "city",
                                    "state",
                                    "postal_code",
                                    "country"
                                ],
                                "properties": {
                                    "profile_id": {
                                        "description": "User profile ID",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "full_name": {
                                        "description": "User full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "dob": {
                                        "description": "User date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "religion": {
                                        "description": "User religion",
                                        "type": "string",
                                        "example": "Hindu"
                                    },
                                    "varna": {
                                        "description": "User varna",
                                        "type": "string",
                                        "example": "Brahmin"
                                    },
                                    "gotra": {
                                        "description": "User gotra",
                                        "type": "string",
                                        "example": "Vashishta"
                                    },
                                    "ishtdev": {
                                        "description": "User ishtdev",
                                        "type": "string",
                                        "example": "Shiva"
                                    },
                                    "kul_devta_devi": {
                                        "description": "User kul devta/devi",
                                        "type": "string",
                                        "example": "Durga"
                                    },
                                    "bio": {
                                        "description": "User biography",
                                        "type": "string",
                                        "example": "I am a spiritual person."
                                    },
                                    "poojatype_online": {
                                        "description": "User online pooja type",
                                        "type": "string",
                                        "example": "Ganapati"
                                    },
                                    "poojatype_offline": {
                                        "description": "User offline pooja type",
                                        "type": "string",
                                        "example": "Lakshmi"
                                    },
                                    "speciality_pooja": {
                                        "description": "User speciality pooja",
                                        "type": "string",
                                        "example": "Yajur Veda"
                                    },
                                    "pravara": {
                                        "description": "User pravara",
                                        "type": "string",
                                        "example": "Bhargava"
                                    },
                                    "ved": {
                                        "description": "User ved",
                                        "type": "string",
                                        "example": "Rigveda"
                                    },
                                    "upved": {
                                        "description": "User upved",
                                        "type": "string",
                                        "example": "Sama Veda"
                                    },
                                    "charanas": {
                                        "description": "User charanas",
                                        "type": "string",
                                        "example": "Madhyama"
                                    },
                                    "mukha": {
                                        "description": "User mukha",
                                        "type": "string",
                                        "example": "Dakshin"
                                    },
                                    "become_pandit": {
                                        "description": "User become pandit status",
                                        "type": "string",
                                        "example": "approved"
                                    },
                                    "street": {
                                        "description": "User street address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "User city",
                                        "type": "string",
                                        "example": "Cityville"
                                    },
                                    "state": {
                                        "description": "User state",
                                        "type": "string",
                                        "example": "Stateville"
                                    },
                                    "postal_code": {
                                        "description": "User postal code",
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "country": {
                                        "description": "User country",
                                        "type": "string",
                                        "example": "Countryland"
                                    },
                                    "profile_picture": {
                                        "description": "User profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "kyc_details_doc01": {
                                        "description": "User KYC details document 01 file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "kyc_details_doc02": {
                                        "description": "User KYC details document 02 file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile Updated Seuccessfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/userProfile": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "User Profile",
                "description": "Display the details of a profile with the given profile_id.\n\nPS-4 Level: Show details of a profile with a given profile_id",
                "operationId": "b78be450f6b457d8dc0d21b252efaccf",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User data retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/verifyUser": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify User",
                "description": "Verify user with OTP.\n\nPS-4 Level: Verify user with OTP",
                "operationId": "f014492d7bebc4a53418c490d29e30b4",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "verification_code"
                                ],
                                "properties": {
                                    "mobile_number": {
                                        "description": "User's mobile number",
                                        "type": "integer",
                                        "format": "number",
                                        "example": "9876875567"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP Sent Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "mobile_number": {
                                            "description": "User's mobile number",
                                            "type": "integer",
                                            "format": "number",
                                            "example": "9876875567"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Mobile Number is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mobile Number is not valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/verifyAdmin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Admin",
                "description": "Verify user with OTP.\n\nPS-4 Level: Verify user with OTP",
                "operationId": "e1c6568d0eee15888c61016f3805c3e6",
                "requestBody": {
                    "description": "Admin details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "verification_code"
                                ],
                                "properties": {
                                    "mobile_number": {
                                        "description": "User's mobile number",
                                        "type": "integer",
                                        "format": "number",
                                        "example": "9876875567"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP Sent Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "mobile_number": {
                                            "description": "User's mobile number",
                                            "type": "integer",
                                            "format": "number",
                                            "example": "9876875567"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Mobile Number is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mobile Number is not valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/user/follow/{userToFollow}": {
            "post": {
                "tags": [
                    "Follower Management"
                ],
                "summary": "Follow User",
                "description": "PS-4 Level: Follow a user or community",
                "operationId": "1d8f0a826db46d7cb1db0f45546eaa29",
                "parameters": [
                    {
                        "name": "userToFollow",
                        "in": "path",
                        "description": "User To Follow Profile Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User followed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "following_profile_details": {
                                                    "description": "Following user profile details",
                                                    "type": "object"
                                                },
                                                "followed_profile_details": {
                                                    "description": "Followed user profile details",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/user/unfollow/{userToUnfollow}": {
            "delete": {
                "tags": [
                    "Follower Management"
                ],
                "summary": "Unfollow User",
                "description": "PS-4 Level: Unfollow a user or community",
                "operationId": "8007d7bb0dc8c6ce675bf71d92a89576",
                "parameters": [
                    {
                        "name": "userToUnfollow",
                        "in": "path",
                        "description": "User To Unfollow Profile Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User unfollowed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "following_profile_details": {
                                                    "description": "Following user profile details",
                                                    "type": "object"
                                                },
                                                "unfollowed_profile_details": {
                                                    "description": "Unfollowed user profile details",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/user/removefollower": {
            "post": {
                "tags": [
                    "Follower Management"
                ],
                "summary": "Remove Follower",
                "description": "PS-4 Level: Remove a follower",
                "operationId": "a979fd2aaa9afa2f1fdfd4735682698d",
                "requestBody": {
                    "description": "Remove Follower",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id_to_remove_follower"
                                ],
                                "properties": {
                                    "profile_id_to_remove_follower": {
                                        "description": "Profile ID of the follower to be removed",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User removed follower successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "following_user_details": {
                                                    "description": "Following user profile details",
                                                    "type": "object"
                                                },
                                                "unfollowed_user_details": {
                                                    "description": "Unfollowed user profile details",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Follower not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Follower not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/user/showAllfollowed": {
            "post": {
                "tags": [
                    "Follower Management"
                ],
                "summary": "Show All Following User",
                "description": "PS-4 Level: Show all profiles that the specified user is following",
                "operationId": "c59cd3cec7a06911a490c85765814c9e",
                "requestBody": {
                    "description": "Show All Following User",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id"
                                ],
                                "properties": {
                                    "profile_id": {
                                        "description": "Profile ID of the user to show followed",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Following User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "following_user_details": {
                                                    "description": "Array of followed user details",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "username": {
                                                                "description": "Username",
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "profile_picture": {
                                                                "description": "Profile picture URL",
                                                                "type": "string",
                                                                "example": "path/to/profile_picture"
                                                            },
                                                            "profile_id": {
                                                                "description": "Profile ID",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "followed_profile_id": {
                                                                "description": "Followed Profile ID",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 2
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Following not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Following not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/user/showAllfollowing": {
            "post": {
                "tags": [
                    "Follower Management"
                ],
                "summary": "Show All Followers",
                "description": "PS-4 Level: Show all profiles that are following the specified user",
                "operationId": "073f05ec9335243860ed722b5e247677",
                "requestBody": {
                    "description": "Show All Followers",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id"
                                ],
                                "properties": {
                                    "profile_id": {
                                        "description": "Profile ID of the user to show followed",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Followers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "following_user_details": {
                                                    "description": "Array of following user details",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "username": {
                                                                "description": "Username",
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "profile_picture": {
                                                                "description": "Profile picture URL",
                                                                "type": "string",
                                                                "example": "path/to/profile_picture"
                                                            },
                                                            "profile_id": {
                                                                "description": "Profile ID",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "following_profile_id": {
                                                                "description": "Following Profile ID",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 2
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Follower not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Follower not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/uniqueFullName": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Check Full Name Availability",
                "description": "Check if a full name is available or already exists.",
                "operationId": "9e96831cdcb54d8e4cdd901c6d42e1ed",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Full Name of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "John Doe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response indicating whether the full name is available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Full name available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Full name already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Full name already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/uniqueUserName": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check Username Availability",
                "description": "Check if a username is available or already exists.",
                "operationId": "da6a1ec70d5cca3b35b67f957d21c401",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Username of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "John Doe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response indicating whether the username is available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Username available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Username already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Username already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/post/comment": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Save Comment",
                "description": "PS-4 Level: Store Comment.",
                "operationId": "e3cdca0cc138b8794636311fd0bed4bb",
                "requestBody": {
                    "description": "Save Comment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "comment",
                                    "profile_id",
                                    "post_id"
                                ],
                                "properties": {
                                    "comment": {
                                        "description": "Comment text",
                                        "type": "string",
                                        "example": "This is a comment"
                                    },
                                    "profile_id": {
                                        "description": "Profile ID of the user creating the comment",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "post_id": {
                                        "description": "ID of the post to which the comment is attached",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "parent_comment_id": {
                                        "description": "ID of the parent comment if this is a reply",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "postCommentData": {
                                                    "description": "Details of the created comment",
                                                    "properties": {
                                                        "comment": {
                                                            "description": "Comment text",
                                                            "type": "string",
                                                            "example": "This is a comment"
                                                        },
                                                        "profile_id": {
                                                            "description": "Profile ID of the user creating the comment",
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 1
                                                        },
                                                        "post_id": {
                                                            "description": "ID of the post to which the comment is attached",
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 1
                                                        },
                                                        "parent_comment_id": {
                                                            "description": "ID of the parent comment if this is a reply",
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "postCommentCount": {
                                                    "description": "Total count of comments for the post",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "commentsReplies": {
                                                    "description": "Array of replies to the comment if applicable",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "comment": {
                                                                "description": "Reply text",
                                                                "type": "string",
                                                                "example": "Reply to the comment"
                                                            },
                                                            "profile_id": {
                                                                "description": "Profile ID of the user creating the reply",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "post_id": {
                                                                "description": "ID of the post to which the reply is attached",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 1
                                                            },
                                                            "parent_comment_id": {
                                                                "description": "ID of the parent comment",
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "example": 2
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User, Post, or Parent Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User, Post, or Parent Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/likeComment": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Like Comment",
                "description": "PS-4 Level: Like Comment.",
                "operationId": "55de8a202a34f274c3e09b5d57e6c465",
                "requestBody": {
                    "description": "Like Comment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id",
                                    "comment_id"
                                ],
                                "properties": {
                                    "profile_id": {
                                        "description": "Profile ID of the user liking the comment",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "comment_id": {
                                        "description": "ID of the comment to be liked",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment liked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "commentlikeCount": {
                                                    "description": "Total count of likes for the comment",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "likeData": {
                                                    "description": "Details of the like operation",
                                                    "properties": {
                                                        "profile_id": {
                                                            "description": "Profile ID of the user liking the comment",
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 1
                                                        },
                                                        "like_flag": {
                                                            "description": "Like status (1 for liked, 0 for unliked)",
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 1
                                                        },
                                                        "comment_id": {
                                                            "description": "ID of the liked comment",
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile or Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile or Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/addupdateCommunity": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Add Update Community",
                "description": "Add or update community details.",
                "operationId": "45905840b35111f9d5d717dfb1a45bf7",
                "requestBody": {
                    "description": "Community data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id"
                                ],
                                "properties": {
                                    "profile_id": {
                                        "description": "Profile ID of the user creating or updating the community",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "Status of the community (approved, pending, etc.)",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "live_arti_link": {
                                        "description": "Link to the live arti of the community",
                                        "type": "string",
                                        "format": "url",
                                        "nullable": true
                                    },
                                    "name_of_community": {
                                        "description": "Name of the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "short_description": {
                                        "description": "Short description of the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "long_description": {
                                        "description": "Long description of the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "main_festival_community": {
                                        "description": "Main festival celebrated in the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "community_image_background": {
                                        "description": "Background image of the community",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "community_image": {
                                        "description": "Image representing the community",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "upload_qr": {
                                        "description": "Uploaded QR code for the community",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "upload_pdf": {
                                        "description": "Uploaded PDF document related to the community",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "upload_video": {
                                        "description": "Uploaded video related to the community",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "upload_licence01": {
                                        "description": "Uploaded license document 01",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "upload_licence02": {
                                        "description": "Uploaded license document 02",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "community_lord_name": {
                                        "description": "Name of the lord or deity worshiped in the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "schedual_visit": {
                                        "description": "Schedule for community visits",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "location_of_community": {
                                        "description": "Location of the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "distance_from_main_city": {
                                        "description": "Distance of the community from the main city",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "distance_from_airpot": {
                                        "description": "Distance of the community from the airport",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "make_community_private": {
                                        "description": "Whether the community is private or public",
                                        "type": "string",
                                        "example": "No"
                                    },
                                    "community_id": {
                                        "description": "ID of the community to be updated (if updating an existing community)",
                                        "type": "integer",
                                        "format": "int32",
                                        "nullable": true
                                    },
                                    "facilities": {
                                        "description": "Object containing facility details",
                                        "type": "object",
                                        "nullable": true
                                    },
                                    "facilities.id": {
                                        "description": "ID of the facility to be updated (if updating an existing facility)",
                                        "type": "integer",
                                        "format": "int32",
                                        "nullable": true
                                    },
                                    "facilities.key": {
                                        "description": "Key of the facility",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "facilities.value": {
                                        "description": "Value of the facility",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Community details added or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community details added or updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile or Community not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile or Community not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/getUserCommunity/{userid}": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Get User Community",
                "description": "Get communities associated with a user.",
                "operationId": "e3bbc237025536284bc73c9cf5649677",
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Communities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All communities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the community",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "profile_id": {
                                                        "description": "Profile ID of the user",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "name_of_community": {
                                                        "description": "Name of the community",
                                                        "type": "string",
                                                        "example": "Community Name"
                                                    },
                                                    "community_image": {
                                                        "description": "Image representing the community",
                                                        "type": "string",
                                                        "example": "community_image.jpg"
                                                    },
                                                    "community_image_background": {
                                                        "description": "Background image of the community",
                                                        "type": "string",
                                                        "example": "community_image_background.jpg"
                                                    },
                                                    "short_description": {
                                                        "description": "Short description of the community",
                                                        "type": "string",
                                                        "example": "Short description of the community"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User, Profile, or Community not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User, Profile, or Community not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/showFollowedCommunities": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Show Followed Communities",
                "description": "Show communities followed by a user.",
                "operationId": "3da426e114d89750316e7d441b38a503",
                "requestBody": {
                    "description": "Community data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id"
                                ],
                                "properties": {
                                    "profile_id": {
                                        "description": "Profile ID of the user",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "Status of the community (approved, pending, etc.)",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "live_arti_link": {
                                        "description": "Link to the live arti of the community",
                                        "type": "string",
                                        "format": "url",
                                        "nullable": true
                                    },
                                    "name_of_community": {
                                        "description": "Name of the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "short_description": {
                                        "description": "Short description of the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "long_description": {
                                        "description": "Long description of the community",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "community_id": {
                                        "description": "ID of the community to be updated (if updating an existing community)",
                                        "type": "integer",
                                        "format": "int32",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Communities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All communities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the community",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "profile_id": {
                                                        "description": "Profile ID of the user",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "name_of_community": {
                                                        "description": "Name of the community",
                                                        "type": "string",
                                                        "example": "Community Name"
                                                    },
                                                    "community_image": {
                                                        "description": "Image representing the community",
                                                        "type": "string",
                                                        "example": "community_image.jpg"
                                                    },
                                                    "short_description": {
                                                        "description": "Short description of the community",
                                                        "type": "string",
                                                        "example": "Short description of the community"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile or Community not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile or Community not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/showAllCommunities": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Get all communities",
                "description": "Retrieve information about all communities.",
                "operationId": "9268c8e9ee0fefcdea68d2c5fc515bd7",
                "responses": {
                    "200": {
                        "description": "Communities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All communities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the community",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "profile_id": {
                                                        "description": "Profile ID of the community owner",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "name_of_community": {
                                                        "description": "Name of the community",
                                                        "type": "string",
                                                        "example": "Community Name"
                                                    },
                                                    "community_image": {
                                                        "description": "Image representing the community",
                                                        "type": "string",
                                                        "example": "community_image.jpg"
                                                    },
                                                    "community_image_background": {
                                                        "description": "Background image of the community",
                                                        "type": "string",
                                                        "example": "community_bg.jpg"
                                                    },
                                                    "short_description": {
                                                        "description": "Short description of the community",
                                                        "type": "string",
                                                        "example": "Short description of the community"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No community found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No community found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/addCommunityHistory": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Add/Update Community History",
                "description": "Add or update community history.",
                "operationId": "5ee492e9c033d1b7ba4ccea35d817f1a",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "history_id",
                                    "community_id",
                                    "history"
                                ],
                                "properties": {
                                    "history": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "history_id": {
                                        "description": "Community history ID (nullable)",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 1
                                    },
                                    "community_id": {
                                        "description": "Community ID",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Community history added or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "history": {
                                            "description": "User's full name",
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "history_id": {
                                            "description": "Community history ID",
                                            "type": "integer",
                                            "format": "number",
                                            "example": 1
                                        },
                                        "community_id": {
                                            "description": "Community ID",
                                            "type": "integer",
                                            "format": "number",
                                            "example": 2
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/showCommunityHistory/{communityId}": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Show Community History",
                "description": "PS-4 Level: Show Community History.",
                "operationId": "e3f08c8e4325219991bbe7cfff550c87",
                "parameters": [
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID of the community",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Community histories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community histories retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community or Community History not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community or Community History not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/addupdateCommunityTime": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Add/Update Community Time",
                "description": "Add or update community open and close time.",
                "operationId": "88fe4564342e9c5a542af887f612d0b6",
                "requestBody": {
                    "description": "Community time details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "community_id",
                                    "open_time",
                                    "close_time",
                                    "time_id"
                                ],
                                "properties": {
                                    "community_id": {
                                        "description": "Community ID",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 1
                                    },
                                    "open_time": {
                                        "description": "Community open time",
                                        "type": "string",
                                        "example": "08:00 AM"
                                    },
                                    "close_time": {
                                        "description": "Community close time",
                                        "type": "string",
                                        "example": "05:00 PM"
                                    },
                                    "time_id": {
                                        "description": "Community time ID (nullable)",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Community open and close time added or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community open and close time added or updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community not found or Community Time not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community not found or Community Time not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/showCommunityTime/{communityId}": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Show Community Time",
                "description": "Retrieve open and close time for a specific community.",
                "operationId": "c2b19ec6974ba9167bab186b8821ca07",
                "parameters": [
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID of the community",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Community open and close time retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community open and close time retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community or Community Time not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community or Community Time not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/addupdateCommunityArti": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Add/Update Community Arti",
                "description": "Endpoint to add or update community arti time.",
                "operationId": "72f240fce0d2b72cfa36317292b106e6",
                "requestBody": {
                    "description": "Community arti details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "community_id",
                                    "arti_time",
                                    "live_arti_link",
                                    "arti_id"
                                ],
                                "properties": {
                                    "community_id": {
                                        "description": "Community ID",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 1
                                    },
                                    "arti_time": {
                                        "description": "Arti time",
                                        "type": "string",
                                        "example": "18:00"
                                    },
                                    "live_arti_link": {
                                        "description": "Link to the live arti (nullable)",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/live-arti"
                                    },
                                    "arti_id": {
                                        "description": "Community arti ID (nullable)",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Community arti time added or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community arti time added or updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community not found or Community Arti not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community not found or Community Arti not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/showCommunityArti/{communityId}": {
            "get": {
                "tags": [
                    "Community"
                ],
                "summary": "Show Community Arti",
                "description": "Retrieve list of arti times for a specific community.",
                "operationId": "955823bc70c6fe1749289b7832ad8ab7",
                "parameters": [
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID of the community",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Community arti times retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community arti times retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community or Arti Time not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community or Arti Time not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/uniqueCommunityName": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Check Community Name Availability",
                "description": "Check if a community name is available or already exists.",
                "operationId": "b3c3cf4dbc5920f11f4ba8f2f15e408a",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the community",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Community Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response indicating whether the community name is available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community name available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Community name already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community name already exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/deleteCommunityHistory": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Delete Community History",
                "description": "Delete community history based on community ID and history ID.",
                "operationId": "ec30acfbceee19967e75c059de72dac0",
                "requestBody": {
                    "description": "Provide community ID, history ID, status, and optional deleted_at.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "community_id",
                                    "status",
                                    "history_id"
                                ],
                                "properties": {
                                    "community_id": {
                                        "description": "The ID of the community.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "history_id": {
                                        "description": "The ID of the history record to delete.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "The updated status of the history record.",
                                        "type": "string",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response indicating the community history was deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community history deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed. Invalid request parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community or Community History not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community or Community History not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/deleteCommunityFacility/{facility_id}": {
            "delete": {
                "tags": [
                    "Community"
                ],
                "summary": "Delete facility",
                "description": "Delete a facility by ID.",
                "operationId": "c420042c16514fc3649982b2bba43876",
                "parameters": [
                    {
                        "name": "facility_id",
                        "in": "path",
                        "description": "ID of the facility to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Facility deleted successfully"
                                        },
                                        "data": {
                                            "description": "Deleted facility data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Facility not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/searchHashtag": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Search Hashtag",
                "description": "PS-4 Level: Search Hashtag.",
                "operationId": "3350b239d72215f5da01db9deaf61bd2",
                "requestBody": {
                    "description": "Search Hashtag",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Search value for the hashtag",
                                        "type": "string",
                                        "example": "#awesome"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hashtag found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "description": "Array of found hashtags",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "description": "Search value for the hashtag",
                                                        "type": "string",
                                                        "example": "#awesome"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No hashtag found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No hashtag found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/getAllStates": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieve All States",
                "description": "PS-4 Level: Get All States.\n\nRetrieves all states or states of a specific country.",
                "operationId": "1daa927f5cf331628825b5efd9ce38e5",
                "responses": {
                    "200": {
                        "description": "States retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All states retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the state",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Name of the state",
                                                        "type": "string",
                                                        "example": "State Name"
                                                    },
                                                    "countryId": {
                                                        "description": "ID of the country the state belongs to",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 101
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/getAllCities/{state_id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieve All Cities",
                "description": "Retrieves all cities of a specific state.",
                "operationId": "9049986d876c68e3ec86c665e85463e6",
                "parameters": [
                    {
                        "name": "state_id",
                        "in": "path",
                        "description": "ID of state",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All states retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the state",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Name of the state",
                                                        "type": "string",
                                                        "example": "State Name"
                                                    },
                                                    "countryId": {
                                                        "description": "ID of the country the state belongs to",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 101
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "City not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/searchCities": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Search Cities",
                "description": "Retrieves cities matching a search query for a specific state.",
                "operationId": "f9adf08a88bd859e46541e3b09fc2e12",
                "requestBody": {
                    "description": "JSON object containing the search query and state ID.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "state_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Search query for city name",
                                        "type": "string",
                                        "example": "City Name"
                                    },
                                    "state_id": {
                                        "description": "ID of the state",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All cities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the city",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Name of the city",
                                                        "type": "string",
                                                        "example": "City Name"
                                                    },
                                                    "stateId": {
                                                        "description": "ID of the state the city belongs to",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 1
                                                    },
                                                    "countryId": {
                                                        "description": "ID of the country the city belongs to",
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "example": 101
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "state_id": [
                                                    "The state_id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/posts": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Retrieve posts based on user activity",
                "description": "Retrieve posts based on user activity, including posts from followed profiles and top-liked posts.",
                "operationId": "6578ff649e9c4542b3e40de7c37d166b",
                "requestBody": {
                    "description": "Pagination details for retrieving posts",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "page": {
                                        "description": "Page number (nullable)",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Posts retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/post/store": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create a new post",
                "description": "Create a new post",
                "operationId": "77860aec6c206e13b806f3198f5d998b",
                "requestBody": {
                    "description": "Details for creating a new post",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "post_type": {
                                        "description": "Type of the post",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "caption": {
                                        "description": "Caption for the post",
                                        "type": "string",
                                        "example": "This is a post caption"
                                    },
                                    "post_data": {
                                        "description": "Array of post data (file upload)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "status": {
                                        "description": "Status of the post",
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "profile_id": {
                                        "description": "ID of the user profile",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/post/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Retrieve a specific post by ID",
                "description": "Retrieve details of a specific post by providing its ID.",
                "operationId": "239ae40d24d82380dd09557f9614ad9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/user-posts/{profileid}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Retrieve posts of a specific user by profile ID",
                "description": "Retrieve posts of a specific user by providing their profile ID.",
                "operationId": "b4ecdc528182a82618272c4ae015b1fd",
                "parameters": [
                    {
                        "name": "profileid",
                        "in": "path",
                        "description": "ID of the user's profile to retrieve posts",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All posts retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No posts found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/showPostType": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Retrieve all post types",
                "description": "Retrieve all post types available in the system.",
                "operationId": "293dd14cdf85ac84b9e76ea9a9a568d6",
                "responses": {
                    "200": {
                        "description": "All post types retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All post types retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/likePost": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Like or unlike a post",
                "description": "Like or unlike a post based on the provided parameters.",
                "operationId": "a018aadc2df140dce8bbd768b15ebd4a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "profile_id": {
                                        "description": "ID of the user's profile",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "like_flag": {
                                        "description": "Like flag (1 for like, 0 for unlike)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "post_id": {
                                        "description": "ID of the post to be liked or unliked",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post Liked Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post Like Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/getPostCommnet": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Get comments for a specific post",
                "description": "Retrieve comments for a specific post based on the provided post_id.",
                "operationId": "c4b9a8e14e664ab0fa7d72ba0c6eb043",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "query",
                        "description": "ID of the post for which comments are to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All posts comment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All posts comment retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/getallpostbyHashtag": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Get Posts by Hashtag",
                "description": "Retrieve posts based on a specified hashtag in the post caption.",
                "operationId": "fc71a9ca544b91fbcfdf708d33f4ccc9",
                "requestBody": {
                    "description": "Hashtag details for retrieving posts",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hashtag": {
                                        "description": "Hashtag to search for in post captions",
                                        "type": "string",
                                        "example": "#example"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All posts retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No posts found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/delete-post/{post_id}": {
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete Post",
                "description": "Delete a post by ID.",
                "operationId": "a028f68d4700636bf3a1e88b7994ad7f",
                "parameters": [
                    {
                        "name": "post_id",
                        "in": "path",
                        "description": "ID of the post to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post deleted successfully"
                                        },
                                        "data": {
                                            "description": "Deleted post data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        },
                                        "data": {
                                            "description": "Empty object",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        },
                                        "errors": {
                                            "description": "Array of error messages",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "data": {
                                            "description": "Empty object",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/search-post": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Suggestion Post",
                "description": "PS-4 Level: Search Hashtag.",
                "operationId": "cede7ec3d6cba9af676fde83f8398d62",
                "responses": {
                    "200": {
                        "description": "Hashtag found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "posts retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/search-post/{postId}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search Post",
                "description": "PS-4 Level: Search Hashtag.",
                "operationId": "27dfc42a023c0af543ca466e377f3f77",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of the post to search",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hashtag found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Posts retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/search-community": {
            "post": {
                "tags": [
                    "Community"
                ],
                "summary": "Search for communities",
                "description": "Search for communities based on the provided name.",
                "operationId": "searchCommunity",
                "requestBody": {
                    "description": "Search value",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "CommunityName"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All communities retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recentCommunityList": {
            "get": {
                "tags": [
                    "Story"
                ],
                "summary": "Get Recent Community List",
                "description": "Retrieve the list of communities recently accessed by followed profiles.",
                "operationId": "19a9eb49c1d9744889df5495f14eeb04",
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No followed profiles or communities found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/recentCommunityPost/{profile_id}": {
            "get": {
                "tags": [
                    "Story"
                ],
                "summary": "Get Recent Community's Post",
                "description": "Retrieve recent posts from a specific community based on profile ID.",
                "operationId": "9dbe47955bcbf47fb308a0037c1e1a63",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "path",
                        "description": "ID of the profile",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Posts retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/updateUserType": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update User Type",
                "description": "Endpoint to update the user type.",
                "operationId": "dea5ca191c687fd3b28c29f6b842d889",
                "requestBody": {
                    "description": "User type update details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "profile_id",
                                    "user_type"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 1
                                    },
                                    "profile_id": {
                                        "description": "Profile ID",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 2
                                    },
                                    "user_type": {
                                        "description": "User Type ID",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User type updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/updateCommunityStatus": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update User Type",
                "description": "Endpoint to update the user type.",
                "operationId": "9f1d1ec6efd77b28055c9526d929ea49",
                "requestBody": {
                    "description": "User type update details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "profile_id",
                                    "status",
                                    "rejection_reason"
                                ],
                                "properties": {
                                    "profile_id": {
                                        "description": "Profile ID",
                                        "type": "integer",
                                        "format": "number",
                                        "example": 2
                                    },
                                    "status": {
                                        "description": "New status for the community",
                                        "type": "string",
                                        "example": "rejected"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community status updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Community does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    }
}